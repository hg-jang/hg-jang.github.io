{"pageProps":{"post":{"slug":"4","id":4,"title":"HTTP - 2","date":"2023-02-15","tags":["http","공부"],"summary":"HTTP 공부 두 번째","content":"<p><code>URL</code>은 인터넷의 리소스를 가리키는 표준이름이다. 전자정보 일부를 가리키고 그것이 어디에 있고 어떻게 접근할 수 있는지 알려준다.</p>\n<h1>URL 문법</h1>\n<p>URL로 인터넷상의 모든 리소스를 찾을 수 있지만, 그 리소스들은 다른 스킴을 통해 접근할 수 있으며, URL 문법은 스킴에 따라서 달라진다.\n대부분의 URL 스킴의 문법은 일반적으로 9개 부분으로 나뉜다.</p>\n<pre><code>&#x3C;스킴>://&#x3C;사용자 이름>:&#x3C;비밀번호>@&#x3C;호스트>:&#x3C;포트>/&#x3C;경로>;&#x3C;파라미터>?&#x3C;질의>#&#x3C;프래그먼트>\n// ex. http://www.today.com:80/index.html\n// http: 스킴\n// 호스트: www.today.com\n// 경로: /index.html\n</code></pre>\n<p>이 모든 컴포넌트를 가지는 URL은 거의 없다. URL의 가장 중요한 세 가지 컴포넌트는 스킴, 호스트, 경로다.</p>\n<h2>스킴: 사용할 프로토콜</h2>\n<p>스킴은 주어진 리소스에 대한 접근 방법을 알려준다. 어떤 프로토콜을 사용해야 하는지 말이다.\n앞선 예에서 사용한 스킴은 <code>http</code>이다. 참고로, 스킴 명은 대소문자를 가리지 않는다. <code>http == HTTP</code></p>\n<h2>호스트와 포트</h2>\n<p>리소스위 위치를 찾기 위해서 필요한 것이 호스트와 포트이다.\n<code>호스트</code>는 접근하려고 하는 리소스를 가지고 있는 인터넷상의 호스트 장비를 가리킨다.\n<code>포트</code>는 서버가 열어놓은 네트워크 포트를 가리킨다.</p>\n<h2>사용자 이름과 비밀번호</h2>\n<p>많은 서버가 자신이 가지고 있는 데이터에 접근을 허용하기 전에 사용자 이름과 비밀번호를 요구한다.</p>\n<pre><code>ftp://ftp.prep.ai.mit.edu/pub/gnu\nftp://anonymous@ftp.prep.ai.mit.edu/pub/gnu\nftp://anonymous:my_passwd@ftp.prep.ai.mit.edu/pub/gnu\nhttp://johndoe:johndoepasswd@www.today.com/weather.txt\n</code></pre>\n<p><code>FTP</code>와 같이 사용자 이름과 비밀번호를 요구하는 URL 스킴을 사용한다면, 그 값들이 삽입되어 있지 않을 경우 기본 사용자 이름과 비밀번호 값이 들어간다.\n첫 번째 예시가 그러하다. 여기서 사용자 이름은 기본 값이 <code>anonymous</code>가, 비밀번호는 브라우저마다 가지고 있는 기본값을 사용한다.\n두 번째 예시에서는 사용자 이름만 전달되었다. 이메일 주소처럼 보이게 하는 <code>@</code>문자는 사용자 이름과 비밀번호를 분리해준다.\n세, 네 번째 예시에서는 이름과 비밀번호가 모두 전달되었으며, <code>:</code>를 통해 분리된다.</p>\n<h2>경로</h2>\n<p><code>경로</code>는 리소스가 서버의 내부 어디에 있는지를 알려준다. 이는 계층적 파일 시스템 경로와 유사한 구조를 가진다.</p>\n<pre><code>http://today.com:80/weather/temperature/2023/01/temperature.txt\n</code></pre>\n<h2>파라미터</h2>\n<p>많은 스킴이 객체에 대한 호스트 및 경로 정보만으로는 리소스를 찾지 못한다.\nURL을 사용하는 애플리케이션이 리소스에 접근하려면 프로토콜 파라미터가 필요하다.\n프로토콜 파라미터가 없으면, 다른 한편에 있는 서버는 그 요청을 잘못 처리하거나 처리를 하지 않을 것이다.\n서버에 정확한 요청을 하기 위해 필요한 입력 파라미터를 받는데 사용한다. 이는 이름/값 쌍의 리스트로 URL 나머지 부분들로부터 <code>;</code> 문자로 구분하여 기술된다.</p>\n<pre><code>ftp://prep.ai.mit.edu/pub/gnu;type=d\nhttp://www.joes-hardware.com/hammers;sale=false/index.html;graphics=true\n</code></pre>\n<h2>질의 문자열</h2>\n<p>데이터베이스 같은 서비스들은 요청받을 리소스 형식의 범위를 좁히기 위해서 질의를 받을 수 있다.\n아래의 URL은 아이템 번호 12731의 재고가 있는지 확인하기 위해 웹 데이터베이스 게이트웨이에 질의하는데 사용된다.</p>\n<pre><code>http://www.joes-hardware.com/inventory-check.cgi?item=12731\nhttp://www.joes-hardware.com/inventory-check.cgi?item=12731&#x26;color=blue\n</code></pre>\n<p>보통 게이트웨이는, 다른 애플리케이션에 접근하려고 할 때 거치는 통로라고 할 수 있다.</p>\n<h2>프래그먼트</h2>\n<p>HTML 같은 리소스 형식들은 본래의 수준보다 더 작게 나뉠 수 있다.\n예를 들어 <code>절(paragraph)</code>이 포함된 용량이 큰 한개의 텍스트 문서의 경우, 그 리소스에 대한 URL은 텍스트 문서 전체를 가리키겠지만, 이상적으로는 리소스 안에 있는 특정 절을 가리킬 수 있어야 한다.\n이 때, 리소스의 특정 부분을 가리킬 수 있도록, URL은 리소스 내의 조각을 가리킬 수 있는 프래그먼트를 제공한다.</p>\n<pre><code>http://www.joes-hardware.com/tools.html#drills\n</code></pre>\n<h1>안전하지 않은 문자</h1>\n"}},"__N_SSG":true}