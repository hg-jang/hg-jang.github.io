{"pageProps":{"post":{"slug":"2","id":2,"title":"마크다운 파싱이 제대로 되지 않는다면","date":"2023-02-10","tags":["remark","markdown","html","markup","remark-gfm","remark plugin"],"summary":"remark와 remark plugin 사용하여 마크다운 파싱하기","content":"<h1>remark로 마크다운 파싱하기</h1>\n<p><code>remark</code>는 마크다운을 파싱하고 직렬화하여 출력하는데 사용된다.\n사용방법은 매우 간단한데 아래 코드를 참고하자.</p>\n<pre><code>import { remark } from 'remark'\nimport html from 'remark-html'\n\n/**\n * @param markdown 마크다운으로 이뤄진 문자\n * @return html로 파싱된 문자\n */\nexport default async function markdownToHtml(markdown: string) {\n  const result = await remark()\n    .use(html)\n    .process(markdown)\n  \n  return result.toString()\n}\n\n// ----------\n&#x3C;div dangerouslySetInnerHTML={{ __html: post.content }}>&#x3C;/div>\n</code></pre>\n<h1>파싱이 제대로 안되네?</h1>\n<p>이 블로그는 마크다운 파일을 파일시스템에서 가져와 html로 파싱하여 보여준다.\n<code>제목</code>, <code>진하게</code>, <code>인라인 코드블럭</code> 등은 무난하게 파싱되지만, <code>~~</code>을 사용한 <code>미들라인 강조</code>는 문자열 그대로 노출이 되었다.</p>\n<h1>Plugin 사용하면 됨</h1>\n<p><code>remark</code>의 재밌는 점은 다양한 <code>플러그인</code>을 붙일 수 있다는 것이다.\n필요에 따라 플러그인을 붙이면 된다.</p>\n<pre><code>import { remark } from 'remark'\nimport html from 'remark-html'\nimport remarkGfm from 'remark-gfm'\n\nexport default async function markdownToHtml(markdown: string) {\n  const result = await remark()\n    .use(html)\n    .use(remarkGfm)\n    .process(markdown)\n  \n  return result.toString()\n}\n</code></pre>\n<p>이제 미들라인 강조가 제대로 표시된다. 그 외에 체크리스트, 테이블 등도 이 플러그인을 통해 사용가능하다고 한다.</p>\n<h1>이미지 가운데 정렬 할 방법은 없나?</h1>\n<p>아쉬운 점은 이미지 가운데 정렬을 위한 플러그인은 찾지 못했다.\n마크다운 문서에서 <code>img</code>태그로 가운데 정렬을 해서 remark로 파싱하면 마크업 부분이 통째로 사라진다.\n이제 보니 구린 것 같다.\n.<br>\n.<br>\n.<br>\n.<br>\n.<br>\n<img src=\"https://s3.ap-northeast-2.amazonaws.com/king-bada.dev/blog/pepe_1.jpeg\" alt=\"Picture\"></p>\n<p>마크다운 딱 대 ㅋㅋ</p>\n"}},"__N_SSG":true}